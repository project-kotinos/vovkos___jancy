.. include:: def.rst
.. index:: pair: namespace; io
.. _doxid-namespace_io:

namespace io
============

.. toctree::
	:hidden:

	namespace_io_lnx.rst
	namespace_io_psx.rst
	namespace_io_win.rst




.. ref-code-block:: jancy
	:class: doxyrest-overview-code-block

	
	namespace io {

	// namespaces

	namespace :ref:`io.lnx<doxid-namespace_io_lnx>`;
	namespace :ref:`io.psx<doxid-namespace_io_psx>`;
	namespace :ref:`io.win<doxid-namespace_io_win>`;

	// enums

	enum
	{
	    :target:`DeviceMonitorNotifyHdrSignature<doxid-enum_member_enum_87_devicemonitornotifyhdrsignature>` = 'nomt',
	};

	enum :ref:`AddressFamily<doxid-type_io_addressfamily>`;
	bitflag enum :ref:`DeviceMonitorEvents<doxid-type_io_devicemonitorevents>`;
	enum :ref:`DeviceMonitorMiMsgCode<doxid-type_io_devicemonitormimsgcode>`;
	bitflag enum :ref:`DeviceMonitorMiStartFlags<doxid-type_io_devicemonitormistartflags>`;
	bitflag enum :ref:`DeviceMonitorNotifyFlags<doxid-type_io_devicemonitornotifyflags>`;
	bitflag enum :ref:`FileOpenFlags<doxid-type_io_fileopenflags>`;
	bitflag enum :ref:`FileStreamEvents<doxid-type_io_filestreamevents>`;
	enum :ref:`FileStreamKind<doxid-type_io_filestreamkind>`;
	bitflag enum :ref:`FileStreamOptions<doxid-type_io_filestreamoptions>`;
	bitflag enum :ref:`MailslotEvents<doxid-type_io_mailslotevents>`;
	bitflag enum :ref:`MailslotOptions<doxid-type_io_mailslotoptions>`;
	bitflag enum :ref:`NamedPipeEvents<doxid-type_io_namedpipeevents>`;
	bitflag enum :ref:`NetworkAdapterFlags<doxid-type_io_networkadapterflags>`;
	enum :ref:`NetworkAdapterType<doxid-type_io_networkadaptertype>`;
	bitflag enum :ref:`PcapEvents<doxid-type_io_pcapevents>`;
	enum :ref:`Protocol<doxid-type_io_protocol>`;
	bitflag enum :ref:`SerialEvents<doxid-type_io_serialevents>`;
	enum :ref:`SerialFlowControl<doxid-type_io_serialflowcontrol>`;
	bitflag enum :ref:`SerialLineErrors<doxid-type_io_seriallineerrors>`;
	bitflag enum :ref:`SerialOptions<doxid-type_io_serialoptions>`;
	enum :ref:`SerialParity<doxid-type_io_serialparity>`;
	bitflag enum :ref:`SerialStatusLines<doxid-type_io_serialstatuslines>`;
	enum :ref:`SerialStopBits<doxid-type_io_serialstopbits>`;
	bitflag enum :ref:`SocketEvents<doxid-type_io_socketevents>`;
	bitflag enum :ref:`SocketOptions<doxid-type_io_socketoptions>`;
	bitflag enum :ref:`SshEvents<doxid-type_io_sshevents>`;
	enum :ref:`UsbClass<doxid-type_io_usbclass>`;
	bitflag enum :ref:`UsbEndpointEvents<doxid-type_io_usbendpointevents>`;
	bitflag enum :ref:`UsbEndpointOptions<doxid-type_io_usbendpointoptions>`;
	enum :ref:`UsbIsoSyncType<doxid-type_io_usbisosynctype>`;
	enum :ref:`UsbIsoUsage<doxid-type_io_usbisousage>`;
	enum :ref:`UsbSpeed<doxid-type_io_usbspeed>`;
	enum :ref:`UsbTransferType<doxid-type_io_usbtransfertype>`;

	// structs

	struct :ref:`DeviceMonitorMiMsgHdr<doxid-type_io_devicemonitormimsghdr>`;
	struct :ref:`DeviceMonitorMiStartParams<doxid-type_io_devicemonitormistartparams>`;
	struct :ref:`DeviceMonitorNotifyHdr<doxid-type_io_devicemonitornotifyhdr>`;
	struct :ref:`NetworkAdapterAddress<doxid-type_io_networkadapteraddress>`;
	struct :ref:`NetworkAdapterDesc<doxid-type_io_networkadapterdesc>`;
	struct :ref:`PcapAddress<doxid-type_io_pcapaddress>`;
	struct :ref:`PcapDeviceDesc<doxid-type_io_pcapdevicedesc>`;
	struct :ref:`SerialPortDesc<doxid-type_io_serialportdesc>`;
	struct :ref:`SocketAddress_ip4<doxid-type_io_socketaddress_ip4>`;
	struct :ref:`SocketAddress_ip6<doxid-type_io_socketaddress_ip6>`;
	struct :ref:`SshConnectParams<doxid-type_io_sshconnectparams>`;
	struct :ref:`UsbConfigurationDesc<doxid-type_io_usbconfigurationdesc>`;
	struct :ref:`UsbDeviceDesc<doxid-type_io_usbdevicedesc>`;
	struct :ref:`UsbEndpointDesc<doxid-type_io_usbendpointdesc>`;
	struct :ref:`UsbInterfaceDesc<doxid-type_io_usbinterfacedesc>`;

	// unions

	union :ref:`Address_ip4<doxid-type_io_address_ip4>`;
	union :ref:`Address_ip6<doxid-type_io_address_ip6>`;
	union :ref:`SocketAddress<doxid-type_io_socketaddress>`;

	// classes

	class :ref:`DeviceMonitor<doxid-type_io_devicemonitor>`;
	class :ref:`File<doxid-type_io_file>`;
	class :ref:`FileStream<doxid-type_io_filestream>`;
	class :ref:`Mailslot<doxid-type_io_mailslot>`;
	class :ref:`MappedFile<doxid-type_io_mappedfile>`;
	class :ref:`NamedPipe<doxid-type_io_namedpipe>`;
	class :ref:`Pcap<doxid-type_io_pcap>`;
	class :ref:`Serial<doxid-type_io_serial>`;
	class :ref:`Socket<doxid-type_io_socket>`;
	class :ref:`SocketAddressResolver<doxid-type_io_socketaddressresolver>`;
	class :ref:`SshChannel<doxid-type_io_sshchannel>`;
	class :ref:`UsbDevice<doxid-type_io_usbdevice>`;
	class :ref:`UsbEndpoint<doxid-type_io_usbendpoint>`;
	class :ref:`UsbInterface<doxid-type_io_usbinterface>`;

	// global functions

	:ref:`io.NetworkAdapterDesc<doxid-type_io_networkadapterdesc>` const* :ref:`createNetworkAdapterDescList<doxid-function_io_createnetworkadapterdesclist>`(
		:ref:`size_t<doxid-typedef_size_t>`* adapterCount = null,
		:ref:`size_t<doxid-typedef_size_t>`* addressCount = null
		);

	char const* :ref:`getFileStreamKindString<doxid-function_io_getfilestreamkindstring>`(:ref:`io.FileStreamKind<doxid-type_io_filestreamkind>` kind);
	:ref:`io.SerialPortDesc<doxid-type_io_serialportdesc>` const* :ref:`createSerialPortDescList<doxid-function_io_createserialportdesclist>`(:ref:`size_t<doxid-typedef_size_t>`* count = null);
	char const* :target:`getSymbolicLinkTarget<doxid-function_io_getsymboliclinktarget>`(char const* name);
	:ref:`io.PcapDeviceDesc<doxid-type_io_pcapdevicedesc>` const* :ref:`createPcapDeviceDescList<doxid-function_io_createpcapdevicedesclist>`(:ref:`size_t<doxid-typedef_size_t>`* count = null);
	char const* :target:`getUsbClassString<doxid-function_io_getusbclassstring>`(:ref:`io.UsbClass<doxid-type_io_usbclass>` cls);
	char const* :target:`getUsbSpeedString<doxid-function_io_getusbspeedstring>`(:ref:`io.UsbSpeed<doxid-type_io_usbspeed>` speed);
	:ref:`io.UsbDevice<doxid-type_io_usbdevice>`* const* errorcode :target:`createUsbDeviceArray<doxid-function_io_createusbdevicearray>`(:ref:`size_t<doxid-typedef_size_t>`* count = null);

	:ref:`io.UsbDevice<doxid-type_io_usbdevice>`* errorcode :target:`openUsbDevice<doxid-function_io_openusbdevice>`(
		:ref:`uint_t<doxid-typedef_uint_t>` vendorId,
		:ref:`uint_t<doxid-typedef_uint_t>` productId
		);

	char const* :target:`getUsbTransferTypeString<doxid-function_io_getusbtransfertypestring>`(:ref:`io.UsbTransferType<doxid-type_io_usbtransfertype>` type);

	} // namespace io
