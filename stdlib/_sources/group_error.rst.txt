.. include:: def.rst
.. index:: pair: group; Error Facilities
.. _doxid-group_error:

Error Facilities
================

.. toctree::
	:hidden:

	struct_std_Error.rst

Overview
~~~~~~~~

This section describes types and facilities for setting and retrieving error information. :ref:`More...<details-group_error>`


.. ref-code-block:: jancy
	:class: doxyrest-overview-code-block

	
	// structs

	struct :ref:`std.Error<doxid-type_std_error>`;

	// global variables

	static :ref:`std.Guid<doxid-type_std_guid>` :target:`std.g_errnoGuid<doxid-variable_std_g_errnoguid>` = { 0x25a6a7b5 , 0xf662 , 0x48ae , { 0xbc , 0xb6 , 0x9a , 0x5c , 0xb5 , 0xce , 0x5b , 0xb9 } };
	static :ref:`std.Guid<doxid-type_std_guid>` :target:`std.g_winErrorGuid<doxid-variable_std_g_winerrorguid>` = { 0x54e100e8 , 0x2137 , 0x40b8 , { 0xbc , 0xd8 , 0x00 , 0xac , 0x1d , 0x0b , 0xaa , 0x16 } };
	static :ref:`std.Guid<doxid-type_std_guid>` :target:`std.g_ntStatusGuid<doxid-variable_std_g_ntstatusguid>` = { 0x81443347 , 0x3bc9 , 0x4d5e , { 0x8b , 0x23 , 0x32 , 0xd7 , 0x80 , 0xed , 0xb5 , 0x2b } };

	// global functions

	:ref:`std.Error<doxid-type_std_error>` const* :ref:`std.getLastError<doxid-function_std_getlasterror>`();
	char const* :ref:`std.getLastErrorDescription<doxid-function_std_getlasterrordescription>`();
	void :ref:`std.setError<doxid-function_std_seterror>`(:ref:`std.Error<doxid-type_std_error>` const* error);
	void :ref:`std.setErrno<doxid-function_std_seterrno>`(int errno);

.. _details-group_error:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This section describes types and facilities for setting and retrieving error information.

Global Functions
----------------

.. index:: pair: function; getLastError
.. _doxid-function_std_getlasterror:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	:ref:`std.Error<doxid-type_std_error>` const* std.getLastError()

Returns a pointer to the last error set in the context of the current
thread.

Currently this function allocates a new error buffer on every call. In the
future caching will be implemented(if ``AXL`` error has not changed since
the last invokation of ``getLastError`` then previously allocated error
buffer could be re-used).

.. index:: pair: function; getLastErrorDescription
.. _doxid-function_std_getlasterrordescription:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	char const* std.getLastErrorDescription()

Returns a human readable description of the the last error set in the
context of the current thread.

Equivalent to:

.. ref-code-block::

	std.getLastError().`m_description<std.Error.m_description>`

.. index:: pair: function; setError
.. _doxid-function_std_seterror:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	void std.setError(:ref:`std.Error<doxid-type_std_error>` const* error)

Sets the last error of the current thread.

.. index:: pair: function; setErrno
.. _doxid-function_std_seterrno:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	void std.setErrno(int errno)

Sets ``errno`` error as the last error of the current thread.

