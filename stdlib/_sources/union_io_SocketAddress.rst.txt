.. include:: def.rst
.. index:: pair: union; io.SocketAddress
.. _doxid-type_io_socketaddress:

union io.SocketAddress
======================

.. toctree::
	:hidden:

Overview
~~~~~~~~

This union is a container for both ``IP4`` and ``IP6`` addresses. :ref:`More...<details-type_io_socketaddress>`


.. ref-code-block:: jancy
	:class: doxyrest-overview-code-block

	import "io_base.jncx"
	import "io_SocketAddress.jnc"
	
	union SocketAddress
	{
		// fields
	
		:ref:`io.AddressFamily<doxid-type_io_addressfamily>` :ref:`m_family<doxid-struct_member_io_socketaddress_m_family>`;
		:ref:`io.SocketAddress_ip4<doxid-type_io_socketaddress_ip4>` :ref:`m_ip4<doxid-struct_member_io_socketaddress_m_ip4>`;
		:ref:`io.SocketAddress_ip6<doxid-type_io_socketaddress_ip6>` :ref:`m_ip6<doxid-struct_member_io_socketaddress_m_ip6>`;

		// methods
	
		bool :ref:`isEqual<doxid-function_io_socketaddress_isequal>`(io.SocketAddress const* addr);
		bool :ref:`isMatch<doxid-function_io_socketaddress_ismatch>`(io.SocketAddress const* filterAddress);
		bool errorcode :ref:`parse<doxid-function_io_socketaddress_parse>`(char const* string);
		char const* :ref:`getString<doxid-function_io_socketaddress_getstring>`() const;
	};
.. _details-type_io_socketaddress:

Detailed Documentation
~~~~~~~~~~~~~~~~~~~~~~

This union is a container for both ``IP4`` and ``IP6`` addresses.

All methods and/or properties of `io.Socket` class which accept or return
addresses, use ``io.SocketAddress`` arguments.

Fields
------

.. index:: pair: variable; m_family
.. _doxid-struct_member_io_socketaddress_m_family:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	:ref:`io.AddressFamily<doxid-type_io_addressfamily>` m_family

Holds the address family of the socket address. Depending on the value
of this field, the actual address is stored in either ``m_ip4`` or in
``m_ip6`` fields.

.. index:: pair: variable; m_ip4
.. _doxid-struct_member_io_socketaddress_m_ip4:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	:ref:`io.SocketAddress_ip4<doxid-type_io_socketaddress_ip4>` m_ip4

Holds ``IP4`` socket address as `io.SocketAddress_ip4`.

.. index:: pair: variable; m_ip6
.. _doxid-struct_member_io_socketaddress_m_ip6:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	:ref:`io.SocketAddress_ip6<doxid-type_io_socketaddress_ip6>` m_ip6

Holds ``IP6`` socket address as `io.SocketAddress_ip6`.

Methods
-------

.. index:: pair: function; isEqual
.. _doxid-function_io_socketaddress_isequal:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	bool isEqual(io.SocketAddress const* addr)

Checks two socket addresses for *equality*; returns ``true`` if
addresses are equal and ``false`` otherwise.

.. index:: pair: function; isMatch
.. _doxid-function_io_socketaddress_ismatch:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	bool isMatch(io.SocketAddress const* filterAddress)

Checks two socket addresses for *matching*. See
`io.SocketAddress_ip4.isMatch` or `io.SocketAddress_ip6.isMatch`
for definition of the term *match*.

Returns ``true`` if addresses *match* and ``false`` otherwise.

.. index:: pair: function; parse
.. _doxid-function_io_socketaddress_parse:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	bool errorcode parse(char const* string)

Constructs the address from a string representation in ``string``
argument.

Returns ``true`` if address string was parsed successfully. Otherwise,
sets the description of parsing error and returns ``false`` [#f1]_.

.. index:: pair: function; getString
.. _doxid-function_io_socketaddress_getstring:

.. ref-code-block:: jancy
	:class: doxyrest-title-code-block

	char const* getString() const

Creates and returns a string representation of the address.


---------------------

.. rubric:: Footnotes

.. [#f1]

	|footnote-errorcode|

